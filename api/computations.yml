openapi: 3.0.1
info:
  title: Computations service
  description: HTTP API for managing computations
  version: "1.0.0"

paths:
  /computations:
    post:
      summary: Add new computation
      description: |
        Adds new computation to the list of computations owned by user identified using
        the provided access token.
      tags:
        - computations
      requestBody:
        $ref: "#/components/requestBodies/ComputationCreateReq"
      responses:
        '201':
          $ref: "#/components/responses/ComputationRes"
        '400':
          description: Failed due to malformed JSON.
        '401':
          description: Missing or invalid access token provided.
        '409':
          description: Entity already exist.
        '415':
          description: Missing or invalid content type.
        '422':
          description: Database can't process request.
        '500':
          $ref: "#/components/responses/ServiceError"
    get:
      summary: Retrieves computations
      description: |
        Retrieves a list of computations. Due to performance concerns, data
        is retrieved in subsets. The API user must ensure that the entire
        dataset is consumed either by making subsequent requests, or by
        increasing the subset size of the initial request.
      tags:
        - computations
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
        - $ref: "#/components/parameters/Name"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Direction"
        - $ref: "#/components/parameters/Metadata"
      responses:
        '200':
          $ref: "#/components/responses/ComputationsPageRes"
        '400':
          description: Failed due to malformed query parameters.
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: A non-existent entity request.
        '422':
          description: Database can't process request.
        '500':
          $ref: "#/components/responses/ServiceError"
  /computations/search:
    post:
      summary: Search and retrieves computations
      description: |
        Retrieves a list of computations with name and metadata filtering.
        Due to performance concerns, data is retrieved in subsets.
        The API user must ensure that the entire
        dataset is consumed either by making subsequent requests, or by
        increasing the subset size of the initial request.
      tags:
        - computations
      requestBody:
        $ref: "#/components/requestBodies/ComputationsSearchReq"
      responses:
        '200':
          $ref: "#/components/responses/ComputationsPageRes"
        '400':
          description: Failed due to malformed query parameters.
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: A non-existent entity request.
        '422':
          description: Unprocessable Entity
        '500':
          $ref: "#/components/responses/ServiceError"
  /computations/{Id}:
    get:
      summary: Retrieves computation info
      tags:
        - computation
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        '200':
          $ref: "#/components/responses/ComputationRes"
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: Computation does not exist.
        '422':
          description: Database can't process request.
        '500':
          $ref: "#/components/responses/ServiceError"
    put:
      summary: Updates computation info
      description: |
        Update is performed by replacing the current resource data with values
        provided in a request payload.
      tags:
        - computations
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        $ref: "#/components/requestBodies/ComputationUpdateReq"
      responses:
        '200':
          description: Computation updated.
        '400':
          description: Failed due to malformed JSON.
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: Computation does not exist.
        '415':
          description: Missing or invalid content type.
        '500':
          $ref: "#/components/responses/ServiceError"
    delete:
      summary: Removes a computation
      description: |
        Removes a computation.
      tags:
        - computation
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        '204':
          description: Computation removed.
        '400':
          description: Failed due to malformed ID.
        '401':
          description: Missing or invalid access token provided.
        '500':
          $ref: "#/components/responses/ServiceError"
  
components:
  schemas:
    Key:
      type: string
      format: uuid
      description: |
        Thing key that is used for thing auth. If there is
        not one provided service will generate one in UUID
        format.
    Identity:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Thing unique identifier. This can be either
            provided by the user or left blank. If the user provides a UUID,
            it would be validated. If there is not one provided then
            the service will generate one in UUID format.
    ComputationReqSchema:
      type: object
      properties:
        name:
          type: string
          description: Free-form name.
        description:
          type: string
          description: Free-form description
        datasets:
          type: array
          description: An array of datasets.
          minItems: 0
          uniqueItems: true
          items:
            type: string
        algorithms:
          type: array
          description: An array of alorithms.
          minItems: 1
          uniqueItems: true
          items:
            type: string
        startTime:
          type: number
          description: Start timestamp of the computations
        endTime:
          type: number
          description: End of the computation
        status:
          type: string
          description: Current status of the computation
        owner:
          type: string
          description: ID of the user who started computation
        datasetProviders:
          type: array
          description: List of IDs of users who provided datasets
          minItems: 0
          uniqueItems: true
          items:
            type: string
        alorithmProviders:
          type: array
          description: List of IDs of users who provided alogirthms
          minItems: 1
          uniqueItems: true
          items:
            type: string
        ttl:
          type: number
          description: Period for computation to live in an inactive state
        metadata:
          type: object
          description: Arbitrary, object-encoded data.
    ComputationsReqSchema:
      type: object
      properties:
        name:
          type: string
          description: Name filter. Filtering is performed as a case-insensitive partial match.
        metadata:
          type: object
          description: Metadata filter. Filtering is performed matching the parameter with metadata on top level. Parameter is json.
        total:
          type: integer
          description: Total number of items.
        offset:
          type: integer
          description: Number of items to skip during retrieval.
          default: 0
          minimum: 0
        limit:
          type: integer
          description: Size of the subset to retrieve.
          default: 10
          maximum: 100
          minimum: 1
        order:
          type: string
          description: Order type.
          default: id
          enum:
            - name
            - id
        dir:
          type: string
          description: Order direction.
          default: desc
          enum:
            - asc
            - desc
    ComputationResSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier generated by the service.
        name:
          type: string
          description: Free-form name.
        key:
          type: string
          format: uuid
          description: Auto-generated access key.
        metadata:
          type: object
          description: Arbitrary, object-encoded data.
      required:
        - id
        - type
        - key
    ComputationsPage:
      type: object
      properties:
        computations:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            $ref: "#/components/schemas/ComputationResSchema"
        total:
          type: integer
          description: Total number of items.
        offset:
          type: integer
          description: Number of items to skip during retrieval.
        limit:
          type: integer
          description: Maximum number of items to return in one page.
      required:
        - computations
  parameters:
    Id:
      name: Id
      description: Unique identifier.
      in: path
      schema:
        type: string
        format: uuid
      required: true
    Limit:
      name: limit
      description: Size of the subset to retrieve.
      in: query
      schema:
        type: integer
        default: 10
        maximum: 100
        minimum: 1
      required: false
    Offset:
      name: offset
      description: Number of items to skip during retrieval.
      in: query
      schema:
        type: integer
        default: 0
        minimum: 0
      required: false
    Name:
      name: name
      description: Name filter. Filtering is performed as a case-insensitive partial match.
      in: query
      schema:
        type: string
      required: false
    Order:
      name: order
      description: Order type.
      in: query
      schema:
        type: string
        default: id
        enum:
          - name
          - id
      required: false
    Direction:
      name: dir
      description: Order direction.
      in: query
      schema:
        type: string
        default: desc
        enum:
          - asc
          - desc
      required: false
    Metadata:
      name: metadata
      description: Metadata filter. Filtering is performed matching the parameter with metadata on top level. Parameter is json.
      in: query
      required: false
      schema:
        type: object
        additionalProperties: {}

  requestBodies:
    ComputationCreateReq:
      description: JSON-formatted document describing the new computaton.
      required: true
      content:
        application/json:
          schema:
           $ref: "#/components/schemas/ComputationReqSchema"
    ComputationsCreateReq:
      description: JSON-formatted document describing the new computation.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              key:
                $ref: "#/components/schemas/Key"
              computations:
                type: array
                items:
                  $ref: "#/components/schemas/ComputationsReqSchema"
    ComputationUpdateReq:
      description: Arbitrary, object-encoded data.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Free-form name.
              metadata:
                type: object
    ComputationsSearchReq:
      description: JSON-formatted document describing search parameters.
      required: true
      content:
        application/json:
          schema:
           $ref: "#/components/schemas/ComputationReqSchema"
    KeyUpdateReq:
      required: true
      description: JSON containing computations.
      content:
        application/json:
          schema:
            type: object
            properties:
              key:
                type: string
                format: uuid
                description: Thing key that is used for thing auth.
  responses:
    CreateThingRes:
      description: Thing registered.
      headers:
        Location:
          content:
            text/plain:
              schema:
                type: string
                description: Created computation's relative URL.
                example: /computations/{id}
    ComputationRes:
      description: Data retrieved.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ComputationResSchema"
    ComputationsPageRes:
      description: Data retrieved.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ComputationsPage"
    IdentityRes:
      description: ID returned.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Identity"
    ServiceError:
      description: Unexpected server-side error occurred.
      content:
        application/json:
          schema:
            type: string
            format: byte
    HealthRes:
      description: Service Health Check.
      content:
        application/json:
          schema:
            $ref: "./schemas/HealthInfo.yml"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        * Users access: "Authorization: Bearer <user_token>"
security:
  - bearerAuth: []