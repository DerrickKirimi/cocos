openapi: 3.1.0
info:
  title: Computation Service API
  version: 1.0.0
servers:
  - url: https://api.example.com/v1

paths:
  /computation:
    post:
      summary: Submit computation metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                algorithms:
                  type: array
                  items:
                    type: string
                  description: Array of algorithms
                  example: ["algorithm1", "algorithm2"]
                datasets:
                  type: array
                  items:
                    type: string
                  description: Array of datasets
                  example: ["dataset1", "dataset2"]
                algorithmProviders:
                  type: array
                  items:
                    type: string
                  description: Array of algorithm providers
                  example: ["provider1", "provider2"]
                datasetProviders:
                  type: array
                  items:
                    type: string
                  description: Array of dataset providers
                  example: ["provider1", "provider2"]
                resultConsumer:
                  type: string
                  description: Consumer of the computation result
      responses:
        "200":
          description: Computation metadata accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadataId:
                    type: string
                    description: Identifier for the computation metadata

/algorithms:
  post:
    summary: Upload algorithm binaries
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              algorithms:
                type: array
                items:
                  type: string
                  format: binary
                description: Array of algorithm binary files (Linux executables)
    responses:
      "200":
        description: Algorithm binaries uploaded
        content:
          application/json:
            schema:
              type: object
              properties:
                algorithmIds:
                  type: array
                  items:
                    type: string
                  description: Identifiers for the uploaded algorithm binaries

/datasets:
  post:
    summary: Upload dataset CSV files
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              datasets:
                type: array
                items:
                  type: string
                  description: Dataset CSV file or string
    responses:
      "200":
        description: Dataset CSV files uploaded
        content:
          application/json:
            schema:
              type: object
              properties:
                datasetIds:
                  type: array
                  items:
                    type: string
                  description: Identifiers for the uploaded dataset CSV files

  /status:
    get:
      summary: Get computation status
      parameters:
        - in: query
          name: metadataId
          required: true
          schema:
            type: string
            description: Identifier for the computation metadata
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Current status of the computation
