# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

version: "3.7"

networks:
  mainflux-base-net:
    driver: bridge

volumes:
  mainflux-auth-db-volume:
  mainflux-users-db-volume:
  mainflux-keto-db-volume:
  mainflux-auth-redis-volume:
  mainflux-es-redis-volume:

services:
  keto:
    image: oryd/keto:v0.6.0-alpha.3
    container_name: mainflux-keto
    ports:
      - ${MF_KETO_READ_REMOTE_PORT}:${MF_KETO_READ_REMOTE_PORT}
      - ${MF_KETO_WRITE_REMOTE_PORT}:${MF_KETO_WRITE_REMOTE_PORT}
    environment:
      - DSN=postgresql://${MF_KETO_DB_USER}:${MF_KETO_DB_PASS}@keto-db:${MF_KETO_DB_PORT}/${MF_KETO_DB}?sslmode=disable
    command: serve -c /home/ory/keto.yml
    restart: on-failure
    volumes:
      - type: bind
        source: ./keto
        target: /home/ory
    networks:
      - mainflux-base-net
    depends_on:
      - keto-db

  keto-migrate:
    image: oryd/keto:v0.6.0-alpha.3
    container_name: mainflux-keto-migrate
    environment:
      - KETO_WRITE_REMOTE=keto:${MF_KETO_WRITE_REMOTE_PORT}
      - KETO_READ_REMOTE=keto:${MF_KETO_READ_REMOTE_PORT}
      - DSN=postgresql://${MF_KETO_DB_USER}:${MF_KETO_DB_PASS}@keto-db:${MF_KETO_DB_PORT}/${MF_KETO_DB}?sslmode=disable
    volumes:
      - type: bind
        source: ./keto
        target: /home/ory
    command: migrate up --all-namespaces -c /home/ory/keto.yml --yes
    restart: on-failure
    networks:
      - mainflux-base-net
    depends_on:
      - keto-db

  keto-db:
    image: postgres:13.3-alpine
    container_name: mainflux-keto-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${MF_KETO_DB_USER}
      POSTGRES_PASSWORD: ${MF_KETO_DB_PASS}
      POSTGRES_DB: ${MF_KETO_DB}
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-keto-db-volume:/var/lib/postgresql/data

  nats:
    image: nats:2.2.4-alpine
    container_name: mainflux-nats
    command: "-c /etc/nats/nats.conf"
    restart: on-failure
    volumes:
      - ./nats/:/etc/nats
    networks:
      - mainflux-base-net
    ports:
    - 4222:4222

  auth-db:
    image: postgres:13.3-alpine
    container_name: mainflux-auth-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${MF_AUTH_DB_USER}
      POSTGRES_PASSWORD: ${MF_AUTH_DB_PASS}
      POSTGRES_DB: ${MF_AUTH_DB}
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-auth-db-volume:/var/lib/postgresql/data

  auth:
    image: mainflux/auth:${MF_RELEASE_TAG}
    container_name: mainflux-auth
    depends_on:
      - auth-db
      - keto
    expose:
      - ${MF_AUTH_GRPC_PORT}
    restart: on-failure
    environment:
      MF_AUTH_LOG_LEVEL: ${MF_AUTH_LOG_LEVEL}
      MF_AUTH_DB_HOST: auth-db
      MF_AUTH_DB_PORT: ${MF_AUTH_DB_PORT}
      MF_AUTH_DB_USER: ${MF_AUTH_DB_USER}
      MF_AUTH_DB_PASS: ${MF_AUTH_DB_PASS}
      MF_AUTH_DB: ${MF_AUTH_DB}
      MF_AUTH_HTTP_PORT: ${MF_AUTH_HTTP_PORT}
      MF_AUTH_GRPC_PORT: ${MF_AUTH_GRPC_PORT}
      MF_AUTH_SECRET: ${MF_AUTH_SECRET}
      MF_AUTH_LOGIN_TOKEN_DURATION: ${MF_AUTH_LOGIN_TOKEN_DURATION}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_KETO_READ_REMOTE_HOST: ${MF_KETO_READ_REMOTE_HOST}
      MF_KETO_READ_REMOTE_PORT: ${MF_KETO_READ_REMOTE_PORT}
      MF_KETO_WRITE_REMOTE_HOST: ${MF_KETO_WRITE_REMOTE_HOST}
      MF_KETO_WRITE_REMOTE_PORT: ${MF_KETO_WRITE_REMOTE_PORT}
    ports:
      - ${MF_AUTH_HTTP_PORT}:${MF_AUTH_HTTP_PORT}
      - ${MF_AUTH_GRPC_PORT}:${MF_AUTH_GRPC_PORT}
    networks:
      - mainflux-base-net

  users-db:
    image: postgres:13.3-alpine
    container_name: mainflux-users-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${MF_USERS_DB_USER}
      POSTGRES_PASSWORD: ${MF_USERS_DB_PASS}
      POSTGRES_DB: ${MF_USERS_DB}
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-users-db-volume:/var/lib/postgresql/data

  users:
    image: mainflux/users:${MF_RELEASE_TAG}
    container_name: mainflux-users
    volumes:
      - ./templates/${MF_USERS_RESET_PWD_TEMPLATE}:/${MF_EMAIL_TEMPLATE}
    depends_on:
      - users-db
      - auth
    restart: on-failure
    environment:
      MF_USERS_LOG_LEVEL: ${MF_USERS_LOG_LEVEL}
      MF_USERS_DB_HOST: users-db
      MF_USERS_DB_PORT: ${MF_USERS_DB_PORT}
      MF_USERS_DB_USER: ${MF_USERS_DB_USER}
      MF_USERS_DB_PASS: ${MF_USERS_DB_PASS}
      MF_USERS_DB: ${MF_USERS_DB}
      MF_USERS_HTTP_PORT: ${MF_USERS_HTTP_PORT}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_EMAIL_HOST: ${MF_EMAIL_HOST}
      MF_EMAIL_PORT: ${MF_EMAIL_PORT}
      MF_EMAIL_USERNAME: ${MF_EMAIL_USERNAME}
      MF_EMAIL_PASSWORD: ${MF_EMAIL_PASSWORD}
      MF_EMAIL_FROM_ADDRESS: ${MF_EMAIL_FROM_ADDRESS}
      MF_EMAIL_FROM_NAME: ${MF_EMAIL_FROM_NAME}
      MF_EMAIL_TEMPLATE: ${MF_EMAIL_TEMPLATE}
      MF_TOKEN_RESET_ENDPOINT: ${MF_TOKEN_RESET_ENDPOINT}
      MF_AUTH_GRPC_URL: ${MF_AUTH_GRPC_URL}
      MF_AUTH_GRPC_TIMEOUT: ${MF_AUTH_GRPC_TIMEOUT}
      MF_USERS_ADMIN_EMAIL: ${MF_USERS_ADMIN_EMAIL}
      MF_USERS_ADMIN_PASSWORD: ${MF_USERS_ADMIN_PASSWORD}
      MF_USERS_ALLOW_SELF_REGISTER: ${MF_USERS_ALLOW_SELF_REGISTER}
    ports:
      - ${MF_USERS_HTTP_PORT}:${MF_USERS_HTTP_PORT}
    networks:
      - mainflux-base-net
  auth-redis:
    image: redis:6.2.2-alpine
    container_name: mainflux-auth-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-auth-redis-volume:/data
